{"version":3,"sources":["config.js","assets/images/login.png","pages/login.jsx","components/dialogSkill.jsx","assets/images/register.png","pages/register.jsx","pages/login_success.jsx","components/customWebchat.jsx","assets/images/guideline.png","components/guideline.jsx","pages/webchat.jsx","pages/user_skills.jsx","pages/register_success.jsx","components/dashboard.jsx","App.js","index.js"],"names":["root_url","LoginPage","history","useHistory","useState","username","setUsername","password","setPassword","useCookies","setCookie","className","Card","style","width","height","padding","variant","display","objectFit","marginRight","src","loginImage","CardHeader","title","subheader","CardContent","FormControl","fullWidth","InputLabel","htmlFor","OutlinedInput","id","labelWidth","onChange","evt","target","value","startAdornment","InputAdornment","position","marginTop","type","CardActions","Button","backgroundColor","color","marginLeft","onClick","data","axios","post","then","response","path","BroadcastChannel","postMessage","is_login","user_id","user_name","push","margin","Typography","href","event","preventDefault","marginBottom","CustomCheckbox","isChecked","content","setSkill","checked","setChecked","Checkbox","renderCheckbox","console","log","renderGroupSkill","groupName","skillList","existedSkills","Grid","item","xs","md","List","map","skillName","includes","ListItem","ListItemText","renderSkillItem","DialogSkill","isOpen","closeDialog","isUpdate","setSkills","knowledge","setKnowledge","technicalSkill","setTechnicalSkill","technology","setTechnology","cookies","setExistedSkills","previousSkills","setPreviousSkills","handleUpdate","user","request","i","length","is_update_skills","alert","handleSkill","handleCancel","skill","status","arr_copy","filter","useEffect","knowledge_temp","technical_skill_temp","tech_temp","get","name","res","skills","Dialog","maxWidth","open","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","container","spacing","DialogActions","RegisterPage","isOpenDialog","openDialog","job_title","setJobTitle","fullname","setFullname","RegisterImage","flexDirection","e","alignItems","LoginSuccessPage","CustomWidget","webchatRef","useRef","openInNewTab","url","new_window","window","opener","channel","addEventListener","current","sendMessage","ref","initPayload","socketUrl","customData","language","subtitle","showFullScreenButton","showMessageDate","profileAvatar","onSocketEvent","message","text","Guideline","guideline","step","Paper","gutterBottom","component","align","WebchatPage","UserSkills","RegisterSuccessPage","timer","setTimer","countDown","location","timer_control","setInterval","clearInterval","toString","Dashboard","token","URLSearchParams","useLocation","search","isValid","setIsValid","setData","Date","toLocaleString","renderDashboard","App","document","ReactDOM","render","StrictMode","CookiesProvider","getElementById"],"mappings":"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","file":"static/js/main.aa78b651.chunk.js","sourcesContent":["const root_url = 'https://services.fit.hcmus.edu.vn:251'\r\n//const root_url = 'http://127.0.0.1:5000'\r\nexport var login_window = null\r\nexport default root_url;","export default __webpack_public_path__ + \"static/media/login.ff90b07d.png\";","import {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  FormControl,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { Component, useState } from \"react\";\r\nimport \"../assets/css/login.css\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport root_url from \"../config\";\r\nimport axios from \"axios\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport loginImage from '../assets/images/login.png'\r\n\r\nexport default function LoginPage() {\r\n  const history = useHistory();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [cookies, setCookie] = useCookies([\"user\"]);\r\n\r\n  const preventDefault = (event) => {\r\n    event.preventDefault();\r\n    history.push(\"/register\");\r\n  };\r\n\r\n  const updateUsername = (evt) => setUsername(evt.target.value);\r\n  const updatePassword = (evt) => setPassword(evt.target.value);\r\n\r\n  const loginHandler = () => {\r\n    const data = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    axios.post(root_url + \"/api/login\", data).then((response) => {\r\n      setCookie(\"user\", response[\"data\"][\"id\"], {\r\n        path: \"/\",\r\n      });\r\n      const channel = new BroadcastChannel(\"app-data\");\r\n      channel.postMessage({ is_login: true, user_id: response[\"data\"][\"id\"], user_name: response[\"data\"][\"name\"] });\r\n      history.push(\"/login_success\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-form\">\r\n      <Card\r\n        style={{ width: \"800px\", height: \"370px\", padding: '20px'}}\r\n        className=\"form-login\"\r\n        variant=\"outlined\"\r\n      >\r\n        <div className=\"container-elements\" style={{ display: \"flex\" }}>\r\n          <div className=\"container-images\">\r\n          <img\r\n              width={400}\r\n              height={400}\r\n              style={{\r\n                objectFit: \"cover\",\r\n                marginRight: \"20px\",\r\n              }}\r\n              src={loginImage}\r\n            />\r\n          </div>\r\n          <div>\r\n            <CardHeader\r\n              title=\"IT Career Bot\"\r\n              subheader=\"Powered by FIT-HCMUS\"\r\n            ></CardHeader>\r\n            <CardContent>\r\n              <form>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                    User ID/Email\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-amount\"\r\n                    labelWidth={120}\r\n                    onChange={updateUsername}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <EmailIcon />\r\n                      </InputAdornment>\r\n                    }\r\n                  />\r\n                </FormControl>\r\n                <div style={{ marginTop: \"20px\" }}></div>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                    Password\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-amount\"\r\n                    labelWidth={100}\r\n                    type=\"password\"\r\n                    onChange={updatePassword}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <LockIcon />\r\n                      </InputAdornment>\r\n                    }\r\n                  />\r\n                </FormControl>\r\n              </form>\r\n            </CardContent>\r\n            <CardActions>\r\n              <Button\r\n                variant=\"contained\"\r\n                style={{\r\n                  backgroundColor: \"#0062e6\",\r\n                  color: \"#ffffff\",\r\n                  width: \"365px\",\r\n                  height: \"50px\",\r\n                  marginLeft: \"8px\",\r\n                }}\r\n                onClick={loginHandler}\r\n              >\r\n                Login\r\n              </Button>\r\n              <div></div>\r\n            </CardActions>\r\n            <div style={{ margin: \"10px\" }}>\r\n              <Typography variant=\"inherit\">Don't have account?</Typography>\r\n              <Link\r\n                style={{\r\n                  marginLeft: \"8px\",\r\n                  marginRight: \"15px\",\r\n                }}\r\n                variant=\"inherit\"\r\n                href=\"#\"\r\n                onClick={preventDefault}\r\n              >\r\n                Sign up\r\n              </Link>\r\n            </div>\r\n            <Typography\r\n              variant=\"caption\"\r\n              style={{\r\n                marginTop: \"20px\",\r\n                marginBottom: \"20px\",\r\n              }}\r\n            >\r\n              Copyright &copy; 2021 IT Career Bot\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Checkbox,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { FormatListBulletedSharp } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport root_url from \"../config\";\r\n\r\nconst CustomCheckbox = ({ isChecked, content, setSkill }) => {\r\n  const [checked, setChecked] = useState(isChecked);\r\n  const handleChange = (event) => {\r\n    setChecked(event.target.checked);\r\n    if (event.target.checked) {\r\n      setSkill(content, true);\r\n    } else {\r\n      setSkill(content, false);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Checkbox\r\n        color=\"primary\"\r\n        checked={checked}\r\n        onChange={handleChange}\r\n      ></Checkbox>\r\n    </>\r\n  );\r\n};\r\n\r\nconst renderCheckbox = (isChecked, content, setSkill) => {\r\n  // if (isChecked === true) {\r\n  //   return <Checkbox color=\"primary\" checked={true}></Checkbox>;\r\n  // } else {\r\n  //   return <Checkbox color=\"primary\"></Checkbox>;\r\n  // }\r\n\r\n  if (isChecked === true) {\r\n    console.log(\"Render checkbox\");\r\n    return (\r\n      <CustomCheckbox isChecked={true} content={content} setSkill={setSkill} />\r\n    );\r\n  } else {\r\n    return (\r\n      <CustomCheckbox isChecked={false} content={content} setSkill={setSkill} />\r\n    );\r\n  }\r\n};\r\n\r\nconst renderSkillItem = (skillName, existedSkills, setSkill) => {\r\n  if (existedSkills.includes(skillName)) {\r\n    console.log(skillName);\r\n    return (\r\n      <ListItem key={skillName}>\r\n        {renderCheckbox(true, skillName, setSkill)}\r\n        <ListItemText>{skillName}</ListItemText>\r\n      </ListItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ListItem>\r\n      {renderCheckbox(false, skillName, setSkill)}\r\n      <ListItemText>{skillName}</ListItemText>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nconst renderGroupSkill = (groupName, skillList, existedSkills, setSkill) => {\r\n  return (\r\n    <Grid item xs={12} md={6}>\r\n      <Typography variant=\"h6\">{groupName}</Typography>\r\n      <List>\r\n        {skillList.map((item) => {\r\n          return renderSkillItem(item, existedSkills, setSkill);\r\n        })}\r\n      </List>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default function DialogSkill({ isOpen, closeDialog, isUpdate, setSkills}) {\r\n  const [knowledge, setKnowledge] = useState([]);\r\n  const [technicalSkill, setTechnicalSkill] = useState([]);\r\n  const [technology, setTechnology] = useState([]);\r\n  const [cookies, setCookie] = useCookies([\"user\"]);\r\n  const [existedSkills, setExistedSkills] = useState([]);\r\n  const [previousSkills, setPreviousSkills] = useState([])\r\n\r\n  console.log('Previous skills')\r\n  console.log(previousSkills)\r\n\r\n  const handleUpdate = () => {\r\n    const user_id = cookies.user;\r\n    var request = {};\r\n    request[\"user_id\"] = user_id;\r\n    request[\"user_skills\"] = [];\r\n    for (var i = 0; i < existedSkills.length; i++) {\r\n      request[\"user_skills\"].push(existedSkills[i]);\r\n    }\r\n\r\n    axios.post(root_url + \"/api/user/skills\", request);\r\n    const channel = new BroadcastChannel(\"app-data\");\r\n    channel.postMessage({ is_update_skills: true });\r\n    alert(\"You updated successfull. You could go back to the chatbot.\")\r\n  };\r\n\r\n  const handleSkill = () => {\r\n    console.log(\"Set skills for new user\")\r\n    setSkills(existedSkills)\r\n    closeDialog()\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Cancel\")\r\n    setExistedSkills([...previousSkills])\r\n    closeDialog()\r\n  }\r\n\r\n  const renderActionButtons = () => {\r\n    return (\r\n      <>\r\n        <Button onClick={handleCancel}>Cancel</Button>\r\n        <Button color=\"primary\" onClick={isUpdate === true ? handleUpdate : handleSkill}>\r\n          Update\r\n        </Button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const setSkill = (skill, status) => {\r\n    if (status) {\r\n      setExistedSkills([...existedSkills, skill]);\r\n    } else {\r\n      const arr_copy = [...existedSkills];\r\n      setExistedSkills(arr_copy.filter((item) => item !== skill));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const knowledge_temp = [];\r\n    const technical_skill_temp = [];\r\n    const tech_temp = [];\r\n    axios\r\n      .get(root_url + \"/api/skills\")\r\n      .then((response) => {\r\n        for (var i = 0; i < response.data.length; i++) {\r\n          if (response.data[i].type === \"Knowledge\") {\r\n            knowledge_temp.push(response.data[i].name);\r\n          }\r\n\r\n          if (response.data[i].type === \"TechnicalSkill\") {\r\n            technical_skill_temp.push(response.data[i].name);\r\n          }\r\n\r\n          if (response.data[i].type === \"Technology\") {\r\n            tech_temp.push(response.data[i].name);\r\n          }\r\n        }\r\n      })\r\n      .then(() => {\r\n        setKnowledge(knowledge_temp);\r\n        setTechnology(tech_temp);\r\n        setTechnicalSkill(technical_skill_temp);\r\n      });\r\n\r\n    // Check user skills\r\n    if (isUpdate === true) {\r\n      const user_id = cookies.user;\r\n      console.log(\"Get skills of the current user\");\r\n      console.log(user_id);\r\n      axios.get(root_url + \"/api/\" + user_id + \"/skills\").then((res) => {\r\n        const skills = [];\r\n        for (var i = 0; i < res[\"data\"].length; i++) {\r\n          skills.push(res[\"data\"][i][\"skill_name\"]);\r\n        }\r\n        setExistedSkills(skills);\r\n      });\r\n    }\r\n\r\n  }, []);\r\n\r\n  console.log(\"Reload\");\r\n  console.log(existedSkills);\r\n\r\n  useEffect(() => {\r\n    if (isOpen === true)\r\n    setPreviousSkills([...existedSkills])\r\n  }, [isOpen])\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        maxWidth=\"sm\"\r\n        open={isOpen}\r\n        aria-labelledby=\"simple-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle>Add existed skills</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Add your existed skills to provide the best career path for you.\r\n          </DialogContentText>\r\n          <Grid container spacing={2}>\r\n            {renderGroupSkill(\r\n              \"Technical skill\",\r\n              technicalSkill,\r\n              existedSkills,\r\n              setSkill\r\n            )}\r\n            {renderGroupSkill(\"Knowledge\", knowledge, existedSkills, setSkill)}\r\n            {renderGroupSkill(\r\n              \"Technology\",\r\n              technology,\r\n              existedSkills,\r\n              setSkill\r\n            )}\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>{renderActionButtons()}</DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/register.2896700b.png\";","import React, { Component, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  FormControl,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport DialogSkill from \"../components/dialogSkill\";\r\nimport RegisterImage from \"../assets/images/register.png\";\r\nimport axios from \"axios\";\r\nimport root_url from \"../config\";\r\n\r\nfunction renderLink() {\r\n  return <Link>Terms of use</Link>;\r\n}\r\n\r\nfunction renderVerifyCheckbox() {\r\n  return (\r\n    <div style={{ display: \"flex\", alignItems: \"center\", marginTop: \"15px\" }}>\r\n      <Checkbox color=\"primary\" />\r\n      <Typography variant=\"caption\">\r\n        I accept the {renderLink()} and Privacy policy\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function RegisterPage() {\r\n  const history = useHistory();\r\n  const [isOpenDialog, openDialog] = useState(false);\r\n  const [skills, setSkills] = useState([])\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [job_title, setJobTitle] = useState(\"\")\r\n  const [fullname, setFullname] = useState(\"\")\r\n\r\n  const preventDefault = (event) => {\r\n    event.preventDefault();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const handleRegister = () => {\r\n    const data = {\r\n      \"username\": username,\r\n      \"password\": password,\r\n      \"job_title\": job_title,\r\n      \"fullname\": fullname,\r\n      \"skills\": skills\r\n    }\r\n    console.log(data)\r\n    axios.post(root_url + '/api/register', data).then((response) => {\r\n      if (response.status === 200) {\r\n        history.push('/register_success')\r\n      }\r\n    })\r\n  }\r\n\r\n  const openDialogSkill = () => {\r\n    openDialog(true);\r\n  };\r\n\r\n  const closeDialogSkill = () => {\r\n    openDialog(false);\r\n  };\r\n  return (\r\n    <div className=\"container-form\">\r\n      <DialogSkill isOpen={isOpenDialog} closeDialog={closeDialogSkill} setSkills={setSkills}/>\r\n      <Card style={{}}>\r\n        <CardHeader\r\n          title=\"Register your account\"\r\n          subheader=\"Explore more your career path\"\r\n        ></CardHeader>\r\n        <CardContent style={{ display: \"flex\" }}>\r\n          <div className=\"container-image\">\r\n            <img\r\n              width={400}\r\n              height={400}\r\n              style={{\r\n                objectFit: \"cover\",\r\n                marginRight: \"20px\",\r\n              }}\r\n              src={RegisterImage}\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"container-two-forms\"\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <div style={{ display: \"flex\" }}>\r\n              <form>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                    Email\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-amount\"\r\n                    labelWidth={60}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <EmailIcon />\r\n                      </InputAdornment>\r\n                    }\r\n                  />\r\n                </FormControl>\r\n\r\n                <div style={{ marginTop: \"20px\" }}></div>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                    Password\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-amount\"\r\n                    labelWidth={100}\r\n                    type=\"password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <LockIcon />\r\n                      </InputAdornment>\r\n                    }\r\n                  />\r\n                </FormControl>\r\n                <div style={{ marginTop: \"20px\" }}></div>\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                    Re-type password\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-amount\"\r\n                    labelWidth={150}\r\n                    type=\"password\"\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <LockIcon />\r\n                      </InputAdornment>\r\n                    }\r\n                  />\r\n                </FormControl>\r\n              </form>\r\n\r\n              <form\r\n                style={{\r\n                  marginLeft: \"20px\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                <FormControl fullWidth variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                    Your name\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-amount\"\r\n                    labelWidth={100}\r\n                    onChange={(e) => setFullname(e.target.value)}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <PersonIcon />\r\n                      </InputAdornment>\r\n                    }\r\n                  />\r\n                </FormControl>\r\n\r\n                <FormControl\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  style={{ marginTop: \"20px\" }}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                    Job title\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-amount\"\r\n                    labelWidth={100}\r\n                    onChange={(e) => setJobTitle(e.target.value)}\r\n                    startAdornment={\r\n                      <InputAdornment position=\"start\">\r\n                        <WorkIcon />\r\n                      </InputAdornment>\r\n                    }\r\n                  />\r\n                </FormControl>\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{\r\n                    backgroundColor: \"#1abc9c\",\r\n                    color: \"#ffffff\",\r\n                    width: \"250px\",\r\n                    height: \"55px\",\r\n                    marginTop: \"20px\",\r\n                  }}\r\n                  onClick={openDialogSkill}\r\n                >\r\n                  Add your skills\r\n                </Button>\r\n              </form>\r\n            </div>\r\n            <div className=\"verify-checkbox\">{renderVerifyCheckbox()}</div>\r\n            <div className=\"container-buttons\" style={{display: 'flex', marginTop: '20px'}}>\r\n              <Button\r\n                variant=\"contained\"\r\n                style={{\r\n                  backgroundColor: \"#0062e6\",\r\n                  color: \"#ffffff\",\r\n                  width: \"260px\",\r\n                  height: '50px'\r\n                }}\r\n                onClick={handleRegister}\r\n              >\r\n                Register\r\n              </Button>\r\n            </div>\r\n            <div style={{ marginTop: \"10px\" }}>\r\n              <CardActions>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                >\r\n                  <Typography variant=\"inherit\">\r\n                    Already have an account?\r\n                  </Typography>\r\n                  <Link\r\n                    style={{\r\n                      marginLeft: \"8px\",\r\n                      marginRight: \"45px\",\r\n                    }}\r\n                    variant=\"inherit\"\r\n                    href=\"#\"\r\n                    onClick={preventDefault}\r\n                  >\r\n                    Login now\r\n                  </Link>\r\n                </Typography>\r\n              </CardActions>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import { Card, CardHeader, Typography } from \"@material-ui/core\";\r\nimport { render } from \"@testing-library/react\";\r\nimport React, { Component, useEffect, useState } from \"react\";\r\nimport { login_window } from \"../config\";\r\n\r\nfunction renderTitle() {\r\n    return(\r\n        <Typography variant='h5' style={{color: '#1abc9c'}}>\r\n            You login successfully.\r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport default function LoginSuccessPage() {\r\n  return (\r\n    <div className=\"container-form\">\r\n      <Card>\r\n        <CardHeader\r\n          title={renderTitle()}\r\n          subheader=\"Close this window and enjoy the IT career bot now.\"\r\n        />\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import Widget from \"rasa-webchat\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport \"../assets/css/widget.css\";\r\nimport { login_window } from \"../config\";\r\n\r\nexport default function CustomWidget() {\r\n  const webchatRef = useRef(null);\r\n  const payload = \"/greet\";\r\n\r\n  const openInNewTab = (url) => {\r\n    const new_window = window.open(url, '_blank', 'noopener,noreferrer')\r\n    if (new_window) new_window.opener = null\r\n  }\r\n\r\n  const channel = new BroadcastChannel(\"app-data\");\r\n  channel.addEventListener(\"message\", (event) => {\r\n    if (event.data.is_login === true) {\r\n      const user_id = event.data.user_id;\r\n      const user_name = event.data.user_name;\r\n\r\n      if (webchatRef.current && webchatRef.current.sendMessage) {\r\n        webchatRef.current.sendMessage(\r\n          '/greetWithName{\"user_id\": \"' +\r\n            user_id +\r\n            '\",' +\r\n            '\"user_name\": \"' +\r\n            user_name +\r\n            '\"' +\r\n            \"}\"\r\n        );\r\n\r\n      }\r\n    }\r\n  });\r\n\r\n  channel.addEventListener(\"message\", (event) => {\r\n    if (event.data.is_update_skills === true) {\r\n      if (webchatRef.current && webchatRef.current.sendMessage) {\r\n        webchatRef.current.sendMessage('/update_user_skills')\r\n      }\r\n    }\r\n  });\r\n  console.log(\"Rasa webchat init\")\r\n  return (\r\n    <Widget\r\n      ref={webchatRef}\r\n      initPayload={payload}\r\n      user\r\n      // socketUrl={\"http://localhost:5005\"}\r\n      socketUrl={\"https://ff3f-115-73-217-121.ngrok.io\"}\r\n      customData={{ language: \"en\" }}\r\n      title=\"IT Career bot\"\r\n      subtitle=\"Powered by FIT-HCMUS\"\r\n      showFullScreenButton={true}\r\n      showMessageDate={false}\r\n      profileAvatar=\"https://i.ibb.co/wQqdKPf/chatbot-icon.png\"\r\n      onSocketEvent={{\r\n        'connect': () => console.log('connection established'),\r\n        'bot_uttered': (message) => {\r\n          if (message.text === \"You are directed to the login page.\")\r\n          {\r\n            openInNewTab(\"/login\")\r\n          }\r\n\r\n          if (message.text === \"You are directed to the register page.\")\r\n          {\r\n            openInNewTab(\"/register\")\r\n          }\r\n\r\n          if (message.text === \"You are directed to the skill page.\")\r\n          {\r\n            openInNewTab(\"/user/skills\")\r\n          }\r\n\r\n          if (message.text === \"You are directed to the survey page.\")\r\n          {\r\n            openInNewTab(\"https://bit.ly/it_career_bot_survey_vi\")\r\n          }\r\n      }\r\n        ,\r\n      }}\r\n    />\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/guideline.ae9118fc.png\";","import {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Typography,\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport guideline from \"../assets/images/guideline.png\";\r\n\r\nfunction renderCardItem(step, content) {\r\n  return (\r\n    <>\r\n      <Paper variant=\"outlined\" style={{ maxWidth: \"450px\", marginBottom: \"20px\", padding: '10px'}}>\r\n            <Typography gutterBottom variant=\"h5\" color='textPrimary' component=\"h2\" align='left'>\r\n              {step}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" align='left'>\r\n              {content}\r\n            </Typography>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function Guideline() {\r\n  const items = [\r\n    { step: \"Step 1\", content: \"Click the right bottom icon in the website.\" },\r\n    {\r\n      step: \"Step 2\",\r\n      content: \"Ask the chatbot about your learning path.\",\r\n    },\r\n    {\r\n      step: \"Step 3\",\r\n      content:\r\n        \"Complete the survey at the end of the conversation to improve your experience next time.\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"container-form\">\r\n      <Card style={{maxWidth: '1000px'}}>\r\n        <CardHeader\r\n          title=\"IT CAREER BOT\"\r\n          subheader=\"IT Career Bot is a career counseling chatbot that helps students (especially senior students who are about to graduate and work in the labor market) as well as employees (who intend to change their current job) to figure out who they are and what they want on their career path. \"\r\n        />\r\n        <div className=\"main-container\" style={{ display: \"flex\" }}>\r\n          <img\r\n            width={400}\r\n            height={400}\r\n            style={{\r\n              objectFit: \"cover\",\r\n              marginRight: \"20px\",\r\n              marginLeft: \"20px\",\r\n            }}\r\n            src={guideline}\r\n          />\r\n          <div className=\"content\">\r\n            <CardContent>\r\n              {items.map((item) => renderCardItem(item.step, item.content))}\r\n            </CardContent>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"footer\">\r\n          <Typography variant=\"h5\" style={{ marginBottom: \"20px\" }}>\r\n            Thank you for taking the time to complete this survey.\r\n          </Typography>\r\n\r\n          <Typography style={{ marginBottom: \"10px\" }} variant='caption'>\r\n              <Link>Report if you cannot use the bot.</Link>\r\n          </Typography>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport CustomWidget from '../components/customWebchat';\r\nimport Guideline from '../components/guideline';\r\n\r\nexport default function WebchatPage() {\r\n  return(<div>\r\n        <CustomWidget/>\r\n        <Guideline/>\r\n      </div>)\r\n}","import DialogSkill from \"../components/dialogSkill\";\r\n\r\nexport default function UserSkills(){\r\n    return (<>\r\n        <div className=\"container-form\">\r\n            <DialogSkill isUpdate={true} isOpen={true}/>\r\n        </div>\r\n    </>)\r\n}","import { Card, CardHeader, Typography } from \"@material-ui/core\";\r\nimport { render } from \"@testing-library/react\";\r\nimport React, { Component, useEffect, useState } from \"react\";\r\n\r\nfunction renderTitle() {\r\n    return(\r\n        <Typography variant='h5' style={{color: '#1abc9c'}}>\r\n            You register successfully.\r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport default function RegisterSuccessPage() {\r\n  const [timer, setTimer] = useState(5)\r\n\r\n  const countDown = () => {\r\n    setTimer(timer - 1)\r\n  }\r\n\r\n  if (timer === 0) {\r\n    window.location =\"/login\"\r\n  }\r\n\r\n  useEffect(() => {\r\n    const timer_control = setInterval(countDown, 1000)\r\n\r\n    return () => clearInterval(timer_control)\r\n  })\r\n\r\n  return (\r\n    <div className=\"container-form\">\r\n      <Card>\r\n        <CardHeader\r\n          title={renderTitle()}\r\n          subheader=\"Close this window and enjoy the IT career bot now.\"\r\n        />\r\n        <div style={{'marginBottom': '10px'}}>{\"Redirecting to login page in \" + timer.toString() + \" seconds.\"}</div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import { Card, CardContent } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport root_url from \"../config\";\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n  }\r\n\r\nfunction renderDashboard(data) {\r\n    return (\r\n        <>\r\n        <div className=\"container-form\">\r\n            <Card style={{ width: \"800px\", height: \"370px\", padding: '20px'}}\r\n        className=\"form-login\"\r\n        variant=\"outlined\">\r\n            <CardContent>\r\n                <h2>Dashboard</h2>\r\n                <h3>{\"User statistics (\" + new Date().toLocaleString() + \")\"}</h3>\r\n                <p>{\"Registered users: \" + data['total_users']}</p>\r\n                <p>{\"The number of active users in last 1 hour: \" + data['total_active_1']}</p>\r\n                <p>{\"The number of active users in last 24 hours: \" + data['total_active_24']}</p>\r\n                <p>{\"Total feedback: \" + data['total_feedback'] + \"/\" + data['total_users']}</p>\r\n            </CardContent>\r\n            </Card>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const Dashboard = () => {\r\n    const query = useQuery()\r\n    const token = query.get('token')\r\n    const [isValid, setIsValid] = useState(false)\r\n    const [data, setData] = useState([{'total_users': 0}])\r\n\r\n    useEffect(() => {\r\n        axios.get(root_url + '/api/dashboard?token=' + token)\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                setIsValid(true)\r\n                setData([response.data])\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    if (isValid === true) {\r\n        return renderDashboard(data[0])\r\n    }\r\n\r\n    return <>\r\n        <div>The access is invalid.</div>\r\n    </>\r\n\r\n    return <></>\r\n}\r\n\r\n","import \"./App.css\";\nimport LoginPage from \"./pages/login\";\nimport { Switch, Route} from \"react-router-dom\";\nimport RegisterPage from \"./pages/register\";\nimport LoginSuccessPage from \"./pages/login_success\";\nimport WebchatPage from \"./pages/webchat\";\nimport UserSkills from \"./pages/user_skills\";\nimport RegisterSuccessPage from \"./pages/register_success\";\nimport { Dashboard } from \"./components/dashboard\";\n\n\nfunction App() {\n  document.title = \"IT Career Bot\"\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n\n        <Route path=\"/register\">\n          <RegisterPage />\n        </Route>\n\n        <Route path=\"/login_success\">\n          <LoginSuccessPage />\n        </Route>\n\n        <Route path=\"/user/skills\">\n          <UserSkills/>\n        </Route>\n\n        <Route path=\"/register_success\">\n          <RegisterSuccessPage/>\n        </Route>\n\n        <Route path=\"/dashboard\">\n          <Dashboard/>\n        </Route>\n\n        <Route path=\"/\">\n          <WebchatPage />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { CookiesProvider } from \"react-cookie\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CookiesProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </CookiesProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}